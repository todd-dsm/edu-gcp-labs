#!/usr/bin/env bash
# shellcheck source=/dev/null
# PURPOSE:  Generate some variables for GCP/GKE. This file is called with one
#           argument while sourcing it in. These are the basic questions you
#           would ask anyone when bootstrapping a new environment.
# -----------------------------------------------------------------------------
#    EXEC:  source build.env <prod|stage>
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# Check for arguments
if [[ "$#" -lt 1 ]]; then
    echo "Bro, where's my first argument: stage or prod?"
    return
fi

set -x

# -----------------------------------------------------------------------------
# Client Truths
export TF_VAR_build_env="$1"
export dns_name='kubes.rocks'
export TF_VAR_dns_name="${dns_name}"

# -----------------------------------------------------------------------------
# Pull in Organization/Billing
source "$HOME/.config/gcloud/configurations/kubes-rocks-sec"

# -----------------------------------------------------------------------------
# Set Project variables
# gcloud config configurations list
export project_id='edu-gcp-labs'

# gcloud compute regions list
export TF_VAR_region='us-central1'

# gcloud compute zones list
export TF_VAR_zone="${TF_VAR_region}-a"

# -----------------------------------------------------------------------------
# Environmental Considerations
# Terraform Constants
case "$TF_VAR_build_env" in
    stage)
        export TF_VAR_project_id="${project_id}-${TF_VAR_build_env}"
        export TF_VAR_cidr_range='10.11.0.0/24'
        export TF_VAR_cluster_name="${TF_VAR_project_id}"
        export TF_VAR_state_bucket="tfstate-${TF_VAR_project_id}"
        export TF_VAR_min_dist_size='4'
        export TF_VAR_worker_type='n1-standard-1'
        ;;
    prod)
        export TF_VAR_project_id="$project_id"
        export TF_VAR_cidr_range='10.10.0.0/24'
        export TF_VAR_cluster_name="${TF_VAR_project_id}"
        export TF_VAR_state_bucket="tfstate-${project_id}"
        export TF_VAR_min_dist_size='4'
        export TF_VAR_worker_type='n1-standard-1'
        ;;
    *)  echo "$TF_VAR_build_env is unsupported; exiting."
        ;;
esac

# -----------------------------------------------------------------------------
# Post decision params
set +x

###----------------------------------------------------------------------------
### Change TF backend prefix with ENV change: <stage|prod>
###---
scripts/setup/tf-backend-create.sh

